[{"C:\\r4bb1t\\programming\\web\\mocur\\pages\\api\\auth\\[...nextauth].js":"1","C:\\r4bb1t\\programming\\web\\mocur\\pages\\api\\hello.ts":"2","C:\\r4bb1t\\programming\\web\\mocur\\pages\\curriculum\\editor.tsx":"3","C:\\r4bb1t\\programming\\web\\mocur\\pages\\curriculum\\index.tsx":"4","C:\\r4bb1t\\programming\\web\\mocur\\pages\\curriculum\\middleware.ts":"5","C:\\r4bb1t\\programming\\web\\mocur\\pages\\curriculum\\view\\[id].tsx":"6","C:\\r4bb1t\\programming\\web\\mocur\\pages\\index.tsx":"7","C:\\r4bb1t\\programming\\web\\mocur\\pages\\_app.tsx":"8","C:\\r4bb1t\\programming\\web\\mocur\\pages\\_document.tsx":"9","C:\\r4bb1t\\programming\\web\\mocur\\components\\CurLists.tsx":"10","C:\\r4bb1t\\programming\\web\\mocur\\components\\Editor\\index.tsx":"11","C:\\r4bb1t\\programming\\web\\mocur\\components\\Editor\\Modal.tsx":"12","C:\\r4bb1t\\programming\\web\\mocur\\components\\Editor\\Node.tsx":"13","C:\\r4bb1t\\programming\\web\\mocur\\components\\Editor\\Sidebar\\index.tsx":"14","C:\\r4bb1t\\programming\\web\\mocur\\components\\Editor\\Sidebar\\Rating.tsx":"15","C:\\r4bb1t\\programming\\web\\mocur\\components\\Icons.tsx":"16","C:\\r4bb1t\\programming\\web\\mocur\\components\\Input.tsx":"17","C:\\r4bb1t\\programming\\web\\mocur\\components\\Layout\\Footer.tsx":"18","C:\\r4bb1t\\programming\\web\\mocur\\components\\Layout\\Header.tsx":"19","C:\\r4bb1t\\programming\\web\\mocur\\components\\Layout\\index.tsx":"20","C:\\r4bb1t\\programming\\web\\mocur\\components\\View\\TreeView.tsx":"21"},{"size":3510,"mtime":1669664729738,"results":"22","hashOfConfig":"23"},{"size":307,"mtime":1683905807479,"results":"24","hashOfConfig":"23"},{"size":1319,"mtime":1684000447272,"results":"25","hashOfConfig":"23"},{"size":1114,"mtime":1684002276732,"results":"26","hashOfConfig":"23"},{"size":595,"mtime":1684007704418,"results":"27","hashOfConfig":"23"},{"size":2333,"mtime":1684006246229,"results":"28","hashOfConfig":"23"},{"size":1684,"mtime":1684002268325,"results":"29","hashOfConfig":"23"},{"size":311,"mtime":1683981821182,"results":"30","hashOfConfig":"23"},{"size":231,"mtime":1683905807487,"results":"31","hashOfConfig":"23"},{"size":2867,"mtime":1684002242802,"results":"32","hashOfConfig":"23"},{"size":4676,"mtime":1684006246167,"results":"33","hashOfConfig":"23"},{"size":6204,"mtime":1684006246113,"results":"34","hashOfConfig":"23"},{"size":2252,"mtime":1684006246055,"results":"35","hashOfConfig":"23"},{"size":5362,"mtime":1684007372545,"results":"36","hashOfConfig":"23"},{"size":1220,"mtime":1684003786497,"results":"37","hashOfConfig":"23"},{"size":8217,"mtime":1683986274392,"results":"38","hashOfConfig":"23"},{"size":828,"mtime":1683967285085,"results":"39","hashOfConfig":"23"},{"size":2917,"mtime":1683999397542,"results":"40","hashOfConfig":"23"},{"size":861,"mtime":1683998101106,"results":"41","hashOfConfig":"23"},{"size":372,"mtime":1683999453747,"results":"42","hashOfConfig":"23"},{"size":1730,"mtime":1684004875262,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1c5bv71",{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\r4bb1t\\programming\\web\\mocur\\pages\\api\\auth\\[...nextauth].js",[],[],"C:\\r4bb1t\\programming\\web\\mocur\\pages\\api\\hello.ts",[],[],"C:\\r4bb1t\\programming\\web\\mocur\\pages\\curriculum\\editor.tsx",[],[],"C:\\r4bb1t\\programming\\web\\mocur\\pages\\curriculum\\index.tsx",[],[],"C:\\r4bb1t\\programming\\web\\mocur\\pages\\curriculum\\middleware.ts",[],[],"C:\\r4bb1t\\programming\\web\\mocur\\pages\\curriculum\\view\\[id].tsx",["111","112","113"],[],"import Sidebar from \"@/components/Editor/Sidebar\";\r\nimport Layout from \"@/components/Layout\";\r\nimport { useRouter } from \"next/router\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport axios, { AxiosError, isAxiosError } from \"axios\";\r\nimport Error from \"next/error\";\r\nimport TreeView from \"@/components/View/TreeView\";\r\n\r\nconst facNodes = (nodes: GetTreeResponseType[\"nodes\"]) => {\r\n  return nodes.map((node) => {\r\n    return {\r\n      id: `${node.index}`,\r\n      position: {\r\n        x: node.loc_x,\r\n        y: node.loc_y,\r\n      },\r\n      type: \"custom\",\r\n      data: {\r\n        index: `${node.index}`,\r\n        title: node.title,\r\n        checklist: node.checklist,\r\n      } as NodeDataType,\r\n    };\r\n  });\r\n};\r\n\r\nconst facEdges = (edges: GetTreeResponseType[\"edges\"]) => {\r\n  return edges.map((edge) => {\r\n    return {\r\n      id: `${edge.id}`,\r\n      source: `${edge.source}`,\r\n      target: `${edge.target}`,\r\n      animated: true,\r\n      style: { stroke: \"#000\" },\r\n    } as EdgeType;\r\n  });\r\n};\r\n\r\nexport default function View() {\r\n  const [data, setData] = useState<GetTreeResponseType | null>(null);\r\n  const [err, setErr] = useState(\"\");\r\n\r\n  const router = useRouter();\r\n  const getData = useCallback(async () => {\r\n    try {\r\n      const res = (\r\n        await axios.get(\r\n          `${process.env.NEXT_PUBLIC_API_HOST}/trees/${router.query.id}`\r\n        )\r\n      ).data as GetTreeResponseType;\r\n      setData(res);\r\n    } catch (e) {\r\n      console.log(e);\r\n      setErr(\"에러가 발생했습니다. 잠시 후 다시 시도해주세요.\");\r\n    }\r\n  }, [router.query.id]);\r\n\r\n  useEffect(() => {\r\n    if (router.query.id) getData();\r\n  }, [router.query.id]);\r\n  return (\r\n    <Layout>\r\n      <main className=\"w-screen h-screen flex overflow-hidden\">\r\n        {err && (\r\n          <div className=\"w-full h-full flex flex-col items-center justify-center font-bold text-lg\">\r\n            <img src=\"/error.svg\" />\r\n            {err}\r\n          </div>\r\n        )}\r\n        {data && (\r\n          <div className=\"absolute inset-0 pt-32 flex overflow-hidden\">\r\n            <Sidebar edit={false} data={data} />\r\n            <TreeView\r\n              nodes={facNodes(data.nodes)}\r\n              edges={facEdges(data.edges)}\r\n            />\r\n          </div>\r\n        )}\r\n      </main>\r\n    </Layout>\r\n  );\r\n}\r\n","C:\\r4bb1t\\programming\\web\\mocur\\pages\\index.tsx",[],[],"C:\\r4bb1t\\programming\\web\\mocur\\pages\\_app.tsx",[],[],"C:\\r4bb1t\\programming\\web\\mocur\\pages\\_document.tsx",[],[],"C:\\r4bb1t\\programming\\web\\mocur\\components\\CurLists.tsx",[],[],"C:\\r4bb1t\\programming\\web\\mocur\\components\\Editor\\index.tsx",["114","115"],[],"import ReactFlow, {\r\n  ReactFlowProvider,\r\n  useReactFlow,\r\n  addEdge,\r\n  Connection,\r\n  OnConnectStartParams,\r\n} from \"reactflow\";\r\nimport CustomNode from \"./Node\";\r\nimport \"reactflow/dist/style.css\";\r\nimport { Dispatch, SetStateAction, useCallback, useRef } from \"react\";\r\nimport { useTreeContext } from \"@/contexts/treeContexts\";\r\nimport { getSampleContents } from \"@/utils/getSampleContents\";\r\n\r\nconst nodeTypes = {\r\n  custom: CustomNode,\r\n};\r\n\r\nlet id = 100;\r\nconst getId = () => `${id++}`;\r\n\r\nfunction Flow() {\r\n  //const reactFlowInstance = useReactFlow();\r\n  const {\r\n    nodes,\r\n    setNodes,\r\n    onNodesChange,\r\n    edges,\r\n    setEdges,\r\n    onEdgesChange,\r\n    setLists,\r\n  } = useTreeContext();\r\n  const onConnect = useCallback((params: Connection) => {\r\n    setEdges((eds) =>\r\n      addEdge(\r\n        {\r\n          ...params,\r\n          animated: true,\r\n          style: { stroke: \"#000\" },\r\n        },\r\n        eds\r\n      )\r\n    );\r\n    console.log(params.target);\r\n    /* if (params.source && params.target)\r\n      setLists((list) =>\r\n        list.map((item) => {\r\n          if (item.index === params.source)\r\n            return {\r\n              ...item,\r\n              children: [\r\n                ...item.children,\r\n                {\r\n                  title:\r\n                    nodes.filter((node) => node.id === params.target)[0]?.data\r\n                      .title || \"\",\r\n                  index: params.target!,\r\n                  children: [] as ListItem[],\r\n                },\r\n              ],\r\n            };\r\n          return item;\r\n        })\r\n      ); */\r\n  }, []);\r\n  const { project } = useReactFlow();\r\n  const reactFlowWrapper = useRef<HTMLDivElement>(null);\r\n  const connectingNodeId = useRef<string | null>(null);\r\n\r\n  const onConnectStart = useCallback(\r\n    (_: any, { nodeId }: OnConnectStartParams) => {\r\n      connectingNodeId.current = nodeId;\r\n    },\r\n    []\r\n  );\r\n\r\n  const onConnectEnd = useCallback(\r\n    (event: MouseEvent | TouchEvent | any) => {\r\n      const targetIsPane = event.target.classList.contains(\"react-flow__pane\");\r\n\r\n      if (targetIsPane) {\r\n        // we need to remove the wrapper bounds, in order to get the correct position\r\n        const { top, left } = reactFlowWrapper.current!.getBoundingClientRect();\r\n        const id = getId();\r\n        const sampleContents = getSampleContents();\r\n        const newNode = {\r\n          id,\r\n          // we are removing the half of the node width (75) to center the new node\r\n          position: project({\r\n            x: event.clientX - left - 75,\r\n            y: event.clientY - top,\r\n          }),\r\n          type: \"custom\",\r\n          data: {\r\n            index: id,\r\n            title: sampleContents.title,\r\n            content: sampleContents.content,\r\n            progress_individual: false,\r\n            loc_x: event.clientX - left - 75,\r\n            loc_y: event.clientY - top,\r\n            checklist: [],\r\n            is_main_branch: true,\r\n          },\r\n        };\r\n\r\n        setLists((list) => [\r\n          ...list.map((item) => {\r\n            if (item.index === connectingNodeId.current)\r\n              return {\r\n                ...item,\r\n                children: [...item.children, id],\r\n              };\r\n            return item;\r\n          }),\r\n          {\r\n            index: id,\r\n            title: sampleContents.title,\r\n            children: [] as string[],\r\n            parents: [connectingNodeId.current!],\r\n          },\r\n        ]);\r\n\r\n        setNodes((nds) => nds.concat(newNode));\r\n        setEdges((eds) =>\r\n          addEdge(\r\n            {\r\n              id,\r\n              source: connectingNodeId.current!,\r\n              target: id,\r\n              animated: true,\r\n              style: { stroke: \"#000\" },\r\n            },\r\n            eds\r\n          )\r\n        );\r\n      }\r\n      console.log(\r\n        JSON.stringify({\r\n          id,\r\n          source: connectingNodeId.current!,\r\n          target: id,\r\n          animated: true,\r\n          style: { stroke: \"#000\" },\r\n        })\r\n      );\r\n    },\r\n    [project]\r\n  );\r\n\r\n  return (\r\n    <div className=\"wrapper w-full\" ref={reactFlowWrapper}>\r\n      <ReactFlow\r\n        nodes={nodes}\r\n        edges={edges}\r\n        onNodesChange={onNodesChange}\r\n        onEdgesChange={onEdgesChange}\r\n        onConnect={onConnect}\r\n        nodeTypes={nodeTypes}\r\n        onConnectStart={onConnectStart}\r\n        onConnectEnd={onConnectEnd}\r\n        className=\"!overflow-visible\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function Editior() {\r\n  return (\r\n    <div className=\"w-full shrink-0\">\r\n      <ReactFlowProvider>\r\n        <Flow />\r\n      </ReactFlowProvider>\r\n    </div>\r\n  );\r\n}\r\n","C:\\r4bb1t\\programming\\web\\mocur\\components\\Editor\\Modal.tsx",[],[],"C:\\r4bb1t\\programming\\web\\mocur\\components\\Editor\\Node.tsx",[],[],"C:\\r4bb1t\\programming\\web\\mocur\\components\\Editor\\Sidebar\\index.tsx",[],[],"C:\\r4bb1t\\programming\\web\\mocur\\components\\Editor\\Sidebar\\Rating.tsx",[],[],"C:\\r4bb1t\\programming\\web\\mocur\\components\\Icons.tsx",[],[],"C:\\r4bb1t\\programming\\web\\mocur\\components\\Input.tsx",[],[],"C:\\r4bb1t\\programming\\web\\mocur\\components\\Layout\\Footer.tsx",["116","117","118","119","120","121","122","123","124","125","126","127"],[],"export default function Footer() {\r\n  return (\r\n    <footer className=\"w-full h-80 flex justify-center relative\">\r\n      <div className=\"w-full h-80 flex justify-center overflow-y-hidden\">\r\n        <img\r\n          src=\"/white.png\"\r\n          className=\"mask-hexagon-2 w-[550px] [mask-size:550px] mt-6\"\r\n        />\r\n        <div className=\"absolute inset-x-0 pt-20 h-80 w-full flex flex-col items-center justify-center gap-8 z-10\">\r\n          <div className=\"flex flex-col items-center\">\r\n            <img src=\"/logo.svg\" />\r\n            <p className=\"font-bold\">2023 SKYCC: Pairing 해커톤 참가작</p>\r\n            <p>Copyright © 호랑개발단 2023 - All right reserved</p>\r\n          </div>\r\n          <div>\r\n            <div className=\"grid grid-flow-col gap-4\">\r\n              <div\r\n                className=\"tooltip tooltip-bottom\"\r\n                data-tip=\"웹 프론트엔드 - 현채\"\r\n              >\r\n                <div className=\"w-12 h-12 mask mask-hexagon\">\r\n                  <a\r\n                    className=\"btn p-0 border-none bg-[#e3e3e3]\"\r\n                    href=\"https://github.com/r-4bb1t\"\r\n                    target=\"_blank\"\r\n                  >\r\n                    <img src=\"/avatars/hyunchae.svg\" className=\"object-cover\" />\r\n                  </a>\r\n                </div>\r\n              </div>\r\n              <div className=\"tooltip\" data-tip=\"백엔드 - 종헌\">\r\n                <div className=\"w-12 h-12 mask mask-hexagon\">\r\n                  <a\r\n                    className=\"btn p-0 border-none bg-[#e3e3e3]\"\r\n                    href=\"https://github.com/Talkwarrior\"\r\n                    target=\"_blank\"\r\n                  >\r\n                    <img src=\"/avatars/jongheon.svg\" className=\"object-cover\" />\r\n                  </a>\r\n                </div>\r\n              </div>\r\n              <div className=\"tooltip tooltip-bottom\" data-tip=\"기타 - 가은\">\r\n                <div className=\"w-12 h-12 mask mask-hexagon\">\r\n                  <a\r\n                    className=\"btn p-0 border-none bg-[#e3e3e3]\"\r\n                    href=\"https://github.com/Talkwarrior\"\r\n                    target=\"_blank\"\r\n                  >\r\n                    <img src=\"/avatars/gaeun.svg\" className=\"object-cover\" />\r\n                  </a>\r\n                </div>\r\n              </div>\r\n              <div className=\"tooltip\" data-tip=\"앱 프론트엔드 - 민서\">\r\n                <div className=\"w-12 h-12 mask mask-hexagon\">\r\n                  <a\r\n                    className=\"btn p-0 border-none bg-[#e3e3e3]\"\r\n                    href=\"https://github.com/Talkwarrior\"\r\n                    target=\"_blank\"\r\n                  >\r\n                    <img src=\"/avatars/minseo.svg\" className=\"object-cover\" />\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n","C:\\r4bb1t\\programming\\web\\mocur\\components\\Layout\\Header.tsx",["128","129"],[],"import Link from \"next/link\";\r\n\r\nexport default function Header() {\r\n  return (\r\n    <header className=\"h-32 w-full fixed flex px-16 items-center justify-between z-50\">\r\n      <ul className=\"flex gap-12 items-center font-semibold text-xl\">\r\n        <li>\r\n          <Link href={\"/\"}>\r\n            <img src=\"/logo.svg\" />\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link href={\"/curriculum\"}>\r\n            <button className=\"hover:-translate-y-1 transition-all\">\r\n              커리큘럼\r\n            </button>\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link href={\"/study\"}>\r\n            <button className=\"hover:-translate-y-1 transition-all\">\r\n              스터디\r\n            </button>\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n      <div className=\"rounded-full w-8 h-8 bg-white\"></div>\r\n    </header>\r\n  );\r\n}\r\n","C:\\r4bb1t\\programming\\web\\mocur\\components\\Layout\\index.tsx",[],[],"C:\\r4bb1t\\programming\\web\\mocur\\components\\View\\TreeView.tsx",[],[],{"ruleId":"130","severity":1,"message":"131","line":60,"column":6,"nodeType":"132","endLine":60,"endColumn":23,"suggestions":"133"},{"ruleId":"134","severity":1,"message":"135","line":66,"column":13,"nodeType":"136","endLine":66,"endColumn":37},{"ruleId":"137","severity":1,"message":"138","line":66,"column":13,"nodeType":"136","endLine":66,"endColumn":37},{"ruleId":"130","severity":1,"message":"139","line":64,"column":6,"nodeType":"132","endLine":64,"endColumn":8,"suggestions":"140"},{"ruleId":"130","severity":1,"message":"141","line":146,"column":5,"nodeType":"132","endLine":146,"endColumn":14,"suggestions":"142"},{"ruleId":"134","severity":1,"message":"135","line":5,"column":9,"nodeType":"136","endLine":8,"endColumn":11},{"ruleId":"137","severity":1,"message":"138","line":5,"column":9,"nodeType":"136","endLine":8,"endColumn":11},{"ruleId":"134","severity":1,"message":"135","line":11,"column":13,"nodeType":"136","endLine":11,"endColumn":36},{"ruleId":"137","severity":1,"message":"138","line":11,"column":13,"nodeType":"136","endLine":11,"endColumn":36},{"ruleId":"134","severity":1,"message":"135","line":27,"column":21,"nodeType":"136","endLine":27,"endColumn":81},{"ruleId":"137","severity":1,"message":"138","line":27,"column":21,"nodeType":"136","endLine":27,"endColumn":81},{"ruleId":"134","severity":1,"message":"135","line":38,"column":21,"nodeType":"136","endLine":38,"endColumn":81},{"ruleId":"137","severity":1,"message":"138","line":38,"column":21,"nodeType":"136","endLine":38,"endColumn":81},{"ruleId":"134","severity":1,"message":"135","line":49,"column":21,"nodeType":"136","endLine":49,"endColumn":78},{"ruleId":"137","severity":1,"message":"138","line":49,"column":21,"nodeType":"136","endLine":49,"endColumn":78},{"ruleId":"134","severity":1,"message":"135","line":60,"column":21,"nodeType":"136","endLine":60,"endColumn":79},{"ruleId":"137","severity":1,"message":"138","line":60,"column":21,"nodeType":"136","endLine":60,"endColumn":79},{"ruleId":"134","severity":1,"message":"135","line":9,"column":13,"nodeType":"136","endLine":9,"endColumn":36},{"ruleId":"137","severity":1,"message":"138","line":9,"column":13,"nodeType":"136","endLine":9,"endColumn":36},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["143"],"@next/next/no-img-element","Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useCallback has a missing dependency: 'setEdges'. Either include it or remove the dependency array.",["144"],"React Hook useCallback has missing dependencies: 'setEdges', 'setLists', and 'setNodes'. Either include them or remove the dependency array.",["145"],{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},"Update the dependencies array to be: [getData, router.query.id]",{"range":"152","text":"153"},"Update the dependencies array to be: [setEdges]",{"range":"154","text":"155"},"Update the dependencies array to be: [project, setEdges, setLists, setNodes]",{"range":"156","text":"157"},[1633,1650],"[getData, router.query.id]",[1593,1595],"[setEdges]",[4048,4057],"[project, setEdges, setLists, setNodes]"]